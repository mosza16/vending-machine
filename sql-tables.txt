create table "vending_machine_product" (
  "vending_machine_product_id" varchar(64),
  "product_id" varchar(64),
  "quantity" numeric,
  "machine_id" varchar(64),
  "created_at" timestamp,
  "created_by" varchar(64),
  "updated_at" timestamp,
  "updated_by" varchar(64),
  primary key ("vending_machine_product_id")
);

create table "admin_user" (
  "user_id" varchar(64),
  "email" varchar(256),
  "phone" varchar(10),
  "password" varchar(256),
  "first_name" varchar(256),
  "last_name" varchar(256),
  "profile_url" varchar(256),
  "created_at" timestamp default current_timestamp,
  "created_by" varchar(64),
  "updated_at" timestamp default current_timestamp,
  "updated_by" varchar(64),
  primary key ("user_id")
);

create index "uk_admin_user_email_phone" on  "admin_user" ("email", "phone");

create table "vending_machine_location" (
  "location_id" varchar(64),
  "subdistrict_code" varchar(10),
  "district_code" varchar(10),
  "province_code" varchar(10),
  "country_code" varchar(10),
  "longitude" varchar(10),
  "latitude" varchar(10),
  "note" varchar(256),
  "machine_id" varchar(64),
  "created_at" timestamp default current_timestamp,
  "created_by" varchar(64),
  "updated_at" timestamp default current_timestamp,
  "updated_by" varchar(64),
  primary key ("location_id")
);

create table "vending_machine" (
  "machine_id" varchar(64),
  "machine_code" varchar(10),
  "location_id" varchar(64),
  "status_code" varchar(2),
  "created_at" timestamp default current_timestamp,
  "created_by" varchar(64),
  "updated_at" timestamp default current_timestamp,
  "updated_by" varchar(64),
  primary key ("machine_id")
);

create index "uk_vending_machine" on  "vending_machine" ("machine_code");

create table "category_product" (
  "category_product_id" varchar(64),
  "category_id" varchar(64),
  "product_id" varchar(64),
  "created_at" timestamp default current_timestamp,
  "created_by" varchar(64),
  "updated_at" timestamp default current_timestamp,
  "updated_by" varchar(64),
  primary key ("category_product_id")
);

create table "vending_machine_status" (
  "status_code" varchar(2),
  "name" varchar(10),
  "created_at" timestamp default current_timestamp,
  "created_by" varchar(64),
  "updated_at" timestamp default current_timestamp,
  "updated_by" varchar(64),
  primary key ("status_code")
);

create table "order_product" (
  "order_product_id" varchar(64),
  "quantity" numeric,
  "th_total_prices" numeric,
  "product_id" varchar(64),
  "order_id" varchar(64),
  "created_at" timestamp default current_timestamp,
  "created_by" varchar(64),
  "updated_at" timestamp default current_timestamp,
  "updated_by" varchar(64),
  primary key ("order_product_id")
);

create table "product" (
  "product_id" varchar(64),
  "product_code" varchar(64),
  "name" varchar(256),
  "th_price" numeric,
  "note" varchar(256),
  "image_url" varchar(256),
  "created_at" timestamp default current_timestamp,
  "created_by" varchar(64),
  "updated_at" timestamp default current_timestamp,
  "updated_by" varchar(64),
  primary key ("product_id")
);

create index "uk_product_code" on  "product" ("product_code");

create table "category" (
  "category_id" varchar(64),
  "category_code" varchar(64),
  "name" varchar(256),
  "note" varchar(256),
  "icon_url" varchar(256),
  "created_at" timestamp default current_timestamp,
  "created_by" varchar(64),
  "updated_at" timestamp default current_timestamp,
  "updated_by" varchar(64),
  primary key ("category_id")
);

create index "uk_category_code" on  "category" ("category_code");

create table "notification_user" (
  "notification_user_id" varchar(256),
  "user_id" varchar(256),
  "created_at" timestamp default current_timestamp,
  "created_by" varchar(64),
  "updated_at" timestamp default current_timestamp,
  "updated_by" varchar(64),
  primary key ("notification_user_id")
);

create table "order" (
  "order_id" varchar(64),
  "th_total_prices" numeric,
  "pay_method" varchar(10),
  "machine_id" varchar(64),
  "created_at" timestamp default current_timestamp,
  "created_by" varchar(64),
  "updated_at" timestamp default current_timestamp,
  "updated_by" varchar(64),
  primary key ("order_id")
);



CREATE OR REPLACE FUNCTION updated_timestamp_func()
RETURNS TRIGGER
LANGUAGE plpgsql AS
'
BEGIN
    NEW.updated_at = now();
    RETURN NEW;
END;
';

DO $$
DECLARE
    t text;
BEGIN
    FOR t IN
        SELECT table_name FROM information_schema.columns WHERE column_name = 'updated_at'
    LOOP
        EXECUTE format('CREATE TRIGGER trigger_update_timestamp
                    BEFORE UPDATE ON %I
                    FOR EACH ROW EXECUTE PROCEDURE updated_timestamp_func()', t,t);
    END loop;
END;
$$ language 'plpgsql';

